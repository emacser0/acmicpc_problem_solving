#include <cstdio>

// 입력
// 첫줄에 X, Y, W, S가 주어진다.
// X: 집이 위치한 X좌표, 0 <= X <= 1,000,000,000
// Y: 집이 위치한 Y좌표, 0 <= Y <= 1,000,000,000
// W: 한 블록 건너는데 필요한 시간, 1 <= W <= 10,000
// S: 대각선으로 한 블록 가로지르는데 필요한 시간, 1 <= S <= 10,000

// 출력
// 세준이가 집에 가는데 필요한 최소 시간을 출력한다.

using ll = long long;

int main()
{
	ll X, Y, W, S;
	scanf("%lld %lld %lld %lld", &X, &Y, &W, &S);

	// sum: 집이 위치한 X좌표와 Y좌표의 합
	// min: 집이 위치한 X좌표와 Y좌표 중 최솟값
 	// max: 집이 위치한 X좌표와 Y좌표 중 최댓값

	ll sum = X + Y;
	ll min = X < Y ? X : Y;
	ll max = sum - min;

	// 대각선으로만 목적지에 도착하는 경우
	if (W >= S)
	{		
		// 대각선으로 직진하여 갈수 있는 만큼 이동한 후, 목적지까지 지그재그로 이동한다.
		// 이때 직진이 끝난 후 남은 거리가 홀수면 지그재그로 이동할 수 없다.
		// 따라서 남은 거리 d = max - min 이 홀수면 지그재그로 이동하다가 마지막에 대각선이 아니라 한 블록만 이동한다.
		// 따라서 직선으로 이동한 거리 + 지그재그로 이동한 거리인 max * S에
		// 남은 거리가 홀수인 경우 - S + W를 더하므로
		// (W - S) 에 (max - min) % 2 를 곱한 값을 max * S 에 더한다.

		printf("%lld\n", max * S + (W - S) * ((max - min) % 2));
	}
	// 대각선으로 먼저 이동한 후, 남은 거리를 한 블록 씩 이동하는 경우
	else if (W * 2 >= S)
	{
		printf("%lld\n", min * S + (max - min) * W);
	}
	// 도착할때까지 한 블록씩만 이동하는 경우
	else
	{
		printf("%lld\n", sum * W);
	}
}